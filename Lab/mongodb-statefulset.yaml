apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-statefulset
spec:
  serviceName: mongodb-headless-service
  replicas: 2
  selector:
    matchLabels:
      app: mongodb-statefulset
  template:
    metadata:
      labels:
        app: mongodb-statefulset
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: mongodb-statefulset
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: init-mongodb-replica-set
          image: mongo:6.0.13 # IMPORTANT: Use a specific, stable MongoDB image version for production
          command:
            - "bash"
            - "-c"
            - |
              if [[ "$(hostname)" == "mongodb-statefulset-0" ]]; then
                echo "Initiating replica set..."
                sleep 20
                MEMBERS="[{_id: 0, host: \"mongodb-statefulset-0.mongodb-headless-service:27017\"},{_id: 1, host: \"mongodb-statefulset-1.mongodb-headless-service:27017\"},{_id: 2, host: \"mongodb-statefulset-2.mongodb-headless-service:27017\"}]"
                echo "Replica set members: $MEMBERS"
                mongosh --eval "rs.initiate({ _id: \"rs0\", members: $MEMBERS });"
                echo "Replica set initiated."
              else
                echo "Not the primary pod (mongodb-statefulset-0), skipping replica set initiation."
              fi
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: MONGO_INITDB_ROOT_PASSWORD
          volumeMounts:
            - name: mongodb-keyfile
              mountPath: /etc/mongodb-keyfile
            - name: mongodb-config
              mountPath: /etc/mongod.conf
              subPath: mongod.conf
            - name: mongodb-data
              mountPath: /data/db
      containers:
        - name: mongodb
          image: mongo:6.0.13 # IMPORTANT: Use a specific, stable MongoDB image version for production
          ports:
            - containerPort: 27017
              name: mongodb
          args: ["--config", "/etc/mongod.conf"] # Pass config file as an argument to the entrypoint
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping').ok"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('replSetGetStatus').ok || db.adminCommand('ping').ok"
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
            - name: mongodb-config
              mountPath: /etc/mongod.conf
              subPath: mongod.conf
            - name: mongodb-keyfile
              mountPath: /etc/mongodb-keyfile
      volumes:
        - name: mongodb-config
          configMap:
            name: mongodb-config
        - name: mongodb-keyfile
          secret:
            secretName: mongodb-keyfile
            defaultMode: 0400
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
        storageClassName: custom-local-storage-class # IMPORTANT: Replace with your actual StorageClass name
